<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (c) 2011, 2021 Sonatype, Inc. and others
	All rights reserved. This program and the accompanying materials
	are made available under the terms of the Eclipse Public License 2.0
	which accompanies this distribution, and is available at
	https://www.eclipse.org/legal/epl-2.0/

	SPDX-License-Identifier: EPL-2.0
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.eclipse.m2e</groupId>
		<artifactId>m2e-core</artifactId>
		<version>1.16.0-SNAPSHOT</version>
	</parent>

	<artifactId>m2e-maven-runtime</artifactId>
	<packaging>pom</packaging>

	<name>M2E - Maven runtime bundles</name>

	<properties>
		<archetype-common.version>2.4</archetype-common.version>
		<dependency.jars.folder>jars</dependency.jars.folder>
		<dependency.sources.folder>jars/sources</dependency.sources.folder>
		<metadata.templates.folder>metadataTemplates</metadata.templates.folder>
	</properties>

	<modules>
		<module>org.eclipse.m2e.archetype.common</module>
		<module>org.eclipse.m2e.maven.indexer</module>
		<module>org.eclipse.m2e.maven.runtime</module>
		<module>org.eclipse.m2e.maven.runtime.slf4j.simple</module>
	</modules>

	<dependencies>
		<!-- globally excluded transitive dependencies (set their scope to 'provided') -->
		<dependency>
			<!-- as of version 1.3.9 includes LGPL'ed sources, can't ship with an EPL project -->
			<!-- http://dev.eclipse.org/ipzilla/show_bug.cgi?id=7302 -->
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>[1.0.0,)</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>5.1.1</version>
					<configuration>
						<supportedProjectTypes>eclipse-plugin</supportedProjectTypes>
						<!-- PDE does not honor custom manifest location -->
						<manifestLocation>META-INF</manifestLocation>
						<niceManifest>true</niceManifest>
						<instructions>
							<Embed-Dependency>*;scope=compile|runtime</Embed-Dependency>
							<Embed-Transitive>true</Embed-Transitive>
							<Embed-Directory>${dependency.jars.folder}</Embed-Directory>

							<_failok>true</_failok>
							<_nouses>true</_nouses>
							<_nodefaultversion>true</_nodefaultversion>
							<_snapshot>qualifier</_snapshot>

							<Bundle-SymbolicName>${project.artifactId};singleton:=false</Bundle-SymbolicName>
							<Bundle-RequiredExecutionEnvironment>JavaSE-11</Bundle-RequiredExecutionEnvironment>
							<Bundle-Name>%Bundle-Name</Bundle-Name>
							<Bundle-Vendor>%Bundle-Vendor</Bundle-Vendor>
							<Bundle-ClassPath>.,{maven-dependencies}</Bundle-ClassPath>
							<Automatic-Module-Name>${project.name}</Automatic-Module-Name>

							<Import-Package>!*</Import-Package>
							<Eclipse-BundleShape>dir</Eclipse-BundleShape>
						</instructions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>generate-osgi-metadata</id>
			<build>
				<pluginManagement>
					<plugins>
						<!-- Disable Tycho plug-ins that would fail in the first pure Maven build -->
						<plugin>
							<groupId>org.eclipse.tycho</groupId>
							<artifactId>tycho-packaging-plugin</artifactId>
							<version>${tycho-version}</version>
							<executions>
								<execution>
									<id>default-build-qualifier</id>
									<phase>none</phase>
								</execution>
								<execution>
									<id>default-validate-id</id>
									<phase>none</phase>
								</execution>
								<execution>
									<id>default-validate-version</id>
									<phase>none</phase>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<filesets>
								<fileset>
									<directory>${dependency.jars.folder}</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.2.0</version>
						<configuration>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<excludeScope>provided</excludeScope>
							<includeScope>runtime</includeScope><!-- only include runtime and compile time dependencies, not test or provided! -->
						</configuration>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<phase>generate-sources</phase>
								<configuration>
									<outputDirectory>${project.basedir}/${dependency.jars.folder}</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>copy-dependency-sources</id>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<phase>generate-sources</phase>
								<configuration>
									<outputDirectory>${project.basedir}/${dependency.sources.folder}</outputDirectory>
									<classifier>sources</classifier>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.felix</groupId>
						<artifactId>maven-bundle-plugin</artifactId>
						<configuration>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>manifest</goal>
								</goals>
								<phase>generate-sources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-classpath-entires</id>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>generate-sources</phase>
								<configuration>
									<exportAntProperties>true</exportAntProperties>
									<target>
										<taskdef resource="net/sf/antcontrib/antlib.xml" />
										<!-- See last answer of https://stackoverflow.com/questions/4368243/maven-antrun-with-sequential-ant-contrib-fails-to-run/45958355 -->
										<!-- and http://ant-contrib.sourceforge.net/tasks/tasks/index.html -->
										<if>
											<equals arg1="${project.packaging}" arg2="pom" /> <!-- only consider children of m2e-maven-runtime project -->
											<then>
												<echo message="Skip pom project" />
											</then>
											<else>
												<!-- create the property 'dependency.jars.lib.entries' that contains the classpath entries for all dependency
													libs and that is exported from ant to maven and used when the .classpath template files are filtered. -->
												<var name="dependency.jars.lib.entries" value="" />
												<for param="jarFile"><!--Ant-contrib tasks already defined in calling script -->
													<fileset dir="${project.basedir}/${dependency.jars.folder}" includes="*.jar" />
													<sequential>
														<local name="jarFilename" />
														<basename property="jarFilename" file="@{jarFile}" suffix=".jar" />
														<local name="lib.entry" />
														<property name="lib.entry"><![CDATA[<classpathentry exported="true" kind="lib" path="${dependency.jars.folder}/${jarFilename}.jar"  sourcepath="${dependency.sources.folder}/${jarFilename}-sources.jar"/>]]></property>
														<var name="dependency.jars.lib.entries" value="${dependency.jars.lib.entries}&#xA;&#x9;${lib.entry}" />
													</sequential>
												</for>
											</else>
										</if>
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>1.0b3</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>process-metadata-templates</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${project.basedir}/${metadata.templates.folder}</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
									<overwrite>true</overwrite>
									<outputDirectory>${project.basedir}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
